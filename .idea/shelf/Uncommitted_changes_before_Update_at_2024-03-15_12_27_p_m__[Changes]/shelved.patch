Index: src/main/java/com/example/eecs2311termproject/Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eecs2311termproject;\r\n\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.stage.Stage;\r\n\r\npublic abstract class Page {\r\n\r\n    //Method to create square panes for food\r\n    protected static StackPane createFoodSquare(String name, double price) {\r\n        //Style for square\r\n        Rectangle square = new Rectangle(250, 250);\r\n        square.setFill(Color.LIGHTGRAY);\r\n        square.setStroke(Color.BLACK);\r\n\r\n        //Labels for name and price of food\r\n        Label nameLabel = new Label(name);\r\n        Label priceLabel = new Label(\"$\" + price);\r\n\r\n        //Item quantity field\r\n        TextField itemQuantity = new TextField(\"1\");\r\n        itemQuantity.setMaxWidth(40);\r\n        itemQuantity.setAlignment(Pos.CENTER);\r\n\r\n        //Plus button to increase number of given food item\r\n        Button plusButton = new Button(\"+\");\r\n        plusButton.setOnAction(e -> {\r\n            int quantity = Integer.parseInt(itemQuantity.getText());\r\n            itemQuantity.setText(String.valueOf(quantity + 1));\r\n        });\r\n\r\n        //Minus button to decrease number of given food item\r\n        Button minusButton = new Button(\"-\");\r\n        minusButton.setOnAction(e -> {\r\n            int quantity = Integer.parseInt(itemQuantity.getText());\r\n            if(quantity >= 1) {\r\n                itemQuantity.setText(String.valueOf(quantity - 1));\r\n            }\r\n        });\r\n\r\n        //Add buttons and text field to control box\r\n        HBox quantityControls = new HBox(5);\r\n        quantityControls.setAlignment(Pos.CENTER);\r\n        quantityControls.getChildren().addAll(minusButton, itemQuantity, plusButton);\r\n\r\n        //Button to add food\r\n        Button addButton = new Button(\"Add\");\r\n        addButton.setOnAction(e -> {\r\n            int quantity = Integer.parseInt(itemQuantity.getText());\r\n            Food f = new Food(name, price); //test\r\n\r\n            boolean found = false;\r\n\r\n            for (Food foodItem : ClientSide.clientOrder.getFoodOrder()) {\r\n                if (foodItem.getName().equals(f.getName()) && foodItem.getPrice() == f.getPrice()) {\r\n                    foodItem.setQuantity(quantity);\r\n                    ClientSide.clientOrder.setRunningTotal(quantity * price);\r\n                    found = true;\r\n\r\n                    PostgreSQL.updateQuantity(f.getName(), quantity);\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!found) {\r\n                f.setQuantity(quantity);\r\n                ClientSide.clientOrder.addFood(f);\r\n                ClientSide.clientOrder.setRunningTotal(quantity * price);\r\n                System.out.println(ClientSide.clientOrder.getRunningTotal());\r\n\r\n                PostgreSQL.WriteToDatabase(f.getName(), f.getPrice(), quantity);\r\n            }\r\n\r\n\r\n        });\r\n\r\n        //VBox to hold square and add button now\r\n        VBox squareContent = new VBox(5);\r\n        squareContent.setAlignment(Pos.CENTER);\r\n        squareContent.getChildren().addAll(nameLabel, priceLabel, quantityControls, addButton);\r\n\r\n        //Stack pane to hold all previous items\r\n        StackPane squarePane = new StackPane();\r\n        squarePane.getChildren().addAll(square, squareContent);\r\n\r\n        return squarePane;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/eecs2311termproject/Page.java b/src/main/java/com/example/eecs2311termproject/Page.java
--- a/src/main/java/com/example/eecs2311termproject/Page.java	
+++ b/src/main/java/com/example/eecs2311termproject/Page.java	
@@ -12,6 +12,9 @@
 import javafx.scene.paint.Color;
 import javafx.scene.shape.Rectangle;
 import javafx.stage.Stage;
+import javafx.scene.control.Alert;
+
+import java.util.ArrayList;
 
 public abstract class Page {
 
@@ -22,15 +25,18 @@
         square.setFill(Color.LIGHTGRAY);
         square.setStroke(Color.BLACK);
 
+
         //Labels for name and price of food
         Label nameLabel = new Label(name);
         Label priceLabel = new Label("$" + price);
 
+
         //Item quantity field
         TextField itemQuantity = new TextField("1");
         itemQuantity.setMaxWidth(40);
         itemQuantity.setAlignment(Pos.CENTER);
 
+
         //Plus button to increase number of given food item
         Button plusButton = new Button("+");
         plusButton.setOnAction(e -> {
@@ -84,15 +90,49 @@
 
         });
 
+
         //VBox to hold square and add button now
         VBox squareContent = new VBox(5);
         squareContent.setAlignment(Pos.CENTER);
         squareContent.getChildren().addAll(nameLabel, priceLabel, quantityControls, addButton);
-
-        //Stack pane to hold all previous items
         StackPane squarePane = new StackPane();
         squarePane.getChildren().addAll(square, squareContent);
 
         return squarePane;
+
+    }
+    protected static StackPane createInfoSquare(String name, double price) {
+
+        TextField infofield= new TextField("");
+        infofield.setAlignment(Pos.CENTER);
+
+        //Style for Info button
+        Rectangle squareinfo = new Rectangle(25, 25);
+        squareinfo.setFill(Color.LIGHTGRAY);
+        squareinfo.setStroke(Color.BLACK);
+        //label for info button
+        Label nameLabelinfo = new Label(name);
+        //Stack pane to hold all previous items
+
+
+        //Adding info button
+        VBox squareContentinfo = new VBox(10);
+        squareContentinfo.setAlignment(Pos.BOTTOM_LEFT);
+        squareContentinfo.getChildren().addAll(nameLabelinfo, infofield);
+        StackPane squareinfoPane = new StackPane();
+        squareinfoPane.getChildren().addAll(squareinfo, squareContentinfo);
+
+        HBox infocontrols = new HBox(5);
+        infocontrols.setAlignment(Pos.CENTER);
+        infocontrols.getChildren().addAll(nameLabelinfo, infofield);
+
+        Button infobutton = new Button("i");
+        infobutton.setOnAction(e -> {
+            /*Integer.parseInt(itemQuantity.getText());*/
+            Food food = new Food();
+            String ingredients = food.getIngredients().toString();
+            infofield.setText(String.valueOf(food.getIngredients().toString()));
+        });
+        return squareinfoPane;
     }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"290a0dde-070b-48f4-885d-3b443cbc056e\" name=\"Changes\" comment=\"PostgreSQL database added to project for data persistence, later this will be used to view orders in kitchen side, currently methods are for adding to the database and updating quantity if the food exists(needs to match table numbers when sign in is implemented). Remove from database method will be added tonight this push is being made to test on other machines\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/Order.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/Order.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/PostgreSQL.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/PostgreSQL.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/TicketsPage.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/TicketsPage.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/ViewOrder.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/ViewOrder.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"EECS-2311-Term-Project\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"5ff4a353-79c7-473c-a99e-54cb17a8d31c\" />\r\n        <option name=\"url\" value=\"https://github.com/adriansd1/EECS-2311-Software-Development-Project.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2bgfh7r016qPevlC39ladtvaLae\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.ClientSide.executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Build EECS-2311-Software-Development-Project.executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.C:/Users/User/IdeaProjects/EECS-2311-Software-Development-Project [ClientSide.main()].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.EECS-2311-Software-Development-Project [:ClientSide.main()].executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/User/Downloads/postgresql-42.7.2.jar&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\samda\\IdeaProjects\\EECS-2311-Term-Project\\src\\main\\resources\\com\\example\\eecs2311termproject\\Images\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"ClientSide\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.eecs2311termproject.ClientSide\" />\r\n      <module name=\"EECS-2311-Term-Project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.eecs2311termproject.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.ClientSide\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"290a0dde-070b-48f4-885d-3b443cbc056e\" name=\"Changes\" comment=\"\" />\r\n      <created>1706641759678</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1706641759678</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Project first commit\">\r\n      <created>1706830213588</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706830213588</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Project first commit\">\r\n      <created>1706831071640</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706831071640</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"adding some client side features\">\r\n      <created>1707072841456</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707072841456</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Client side improved by adding welcome message as well as foodMenus functionality added\">\r\n      <created>1707842389369</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707842389369</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Added Menu for Maki which will be repeated for the rest of the food menus, improvements made to these menus so foods can be easily added to these menus. I also included some more fields to food class to ensure cost and name are tracked. Also added software Icon\">\r\n      <created>1707865170271</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707865170272</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Completed Maki page and added GUI which allows user to select quantity, this implementation will be used for the rest of the pages and menus. I also added extensive documentation for my code\">\r\n      <created>1708056578058</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708056578058</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Extended GUI from Maki class to the other sushi classes, I also added and abstract class to hold the create square method to reduce code redundancy, this might be removed later as it may interfere with business logic\">\r\n      <created>1708062345777</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708062345777</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"GUI completed for all menus so that they all have food menus and pages with ability to add different quantities of each food\">\r\n      <created>1708134814423</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708134814423</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Beginning to implement the view order class so that the order can be viewed by the customer before it is sent to kitchen side(must be implemented how to send to the kitchen) and to add the table number before confirming(also must be implemented). Some UI changes as well and a potential login screen which may be deleted\">\r\n      <created>1708732765990</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708732765990</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"PostgreSQL database added to project for data persistence, later this will be used to view orders in kitchen side, currently methods are for adding to the database and updating quantity if the food exists(needs to match table numbers when sign in is implemented). Remove from database method will be added tonight this push is being made to test on other machines\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708917652783</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708917652783</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"PostgreSQL database added to project for data persistence, later this will be used to view orders in kitchen side, currently methods are for adding to the database and updating quantity if the food exists(needs to match table numbers when sign in is implemented). Remove from database method will be added tonight this push is being made to test on other machines\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708917754432</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708917754432</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Project first commit\" />\r\n    <MESSAGE value=\"adding some client side features\" />\r\n    <MESSAGE value=\"Client side improved by adding welcome message as well as foodMenus functionality added\" />\r\n    <MESSAGE value=\"Added Menu for Maki which will be repeated for the rest of the food menus, improvements made to these menus so foods can be easily added to these menus. I also included some more fields to food class to ensure cost and name are tracked. Also added software Icon\" />\r\n    <MESSAGE value=\"Completed Maki page and added GUI which allows user to select quantity, this implementation will be used for the rest of the pages and menus. I also added extensive documentation for my code\" />\r\n    <MESSAGE value=\"Extended GUI from Maki class to the other sushi classes, I also added and abstract class to hold the create square method to reduce code redundancy, this might be removed later as it may interfere with business logic\" />\r\n    <MESSAGE value=\"GUI completed for all menus so that they all have food menus and pages with ability to add different quantities of each food\" />\r\n    <MESSAGE value=\"Beginning to implement the view order class so that the order can be viewed by the customer before it is sent to kitchen side(must be implemented how to send to the kitchen) and to add the table number before confirming(also must be implemented). Some UI changes as well and a potential login screen which may be deleted\" />\r\n    <MESSAGE value=\"PostgreSQL database added to project for data persistence, later this will be used to view orders in kitchen side, currently methods are for adding to the database and updating quantity if the food exists(needs to match table numbers when sign in is implemented). Remove from database method will be added tonight this push is being made to test on other machines\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"PostgreSQL database added to project for data persistence, later this will be used to view orders in kitchen side, currently methods are for adding to the database and updating quantity if the food exists(needs to match table numbers when sign in is implemented). Remove from database method will be added tonight this push is being made to test on other machines\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,11 +5,16 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="290a0dde-070b-48f4-885d-3b443cbc056e" name="Changes" comment="PostgreSQL database added to project for data persistence, later this will be used to view orders in kitchen side, currently methods are for adding to the database and updating quantity if the food exists(needs to match table numbers when sign in is implemented). Remove from database method will be added tonight this push is being made to test on other machines">
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/KitchenTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-04_4_28_p_m___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-04_4_28_p_m___Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/Order.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/Order.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/ClientSide.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/ClientSide.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/Food.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/Food.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/Kitchen.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/Kitchen.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/Page.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/Page.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/PostgreSQL.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/PostgreSQL.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/TicketsPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/TicketsPage.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/ViewOrder.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/eecs2311termproject/ViewOrder.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -49,6 +54,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="newbranch1" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="GitHubPullRequestSearchHistory">{
@@ -89,7 +99,8 @@
     &quot;last_opened_file_path&quot;: &quot;C:/Users/User/Downloads/postgresql-42.7.2.jar&quot;,
     &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
     &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;
   }
 }</component>
   <component name="RecentsManager">
